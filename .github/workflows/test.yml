on: pull_request
name: Test
jobs:
  test:
    strategy:
      matrix:
        rust-toolchain: [stable]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    environment: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        targets: wasm32-wasi
        components: clippy, rustfmt
    - name: Install audit
      run: cargo install cargo-audit
      shell: bash 
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Store secrets
      run: |
        echo "${{ secrets.CLIENT_ID }}" > .secrets.client_id
        echo "${{ secrets.CLIENT_SECRET }}" > .secrets.client_secret
        dd if=/dev/random bs=32 count=1 | base64 > .secret.nonce_secret 
    - name: Check binaries and format
      run: RUSTFLAGS="--deny warnings" cargo check --bins --target wasm32-wasi && cargo fmt -- --check
    - name: Run clippy
      run: cargo clippy
    - name: Run audit
      run: cargo audit
    - name: Run build
      run: cargo build
